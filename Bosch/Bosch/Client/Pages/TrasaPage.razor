@page "/trasy"
@using Bosch.Shared
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Trasy</h3>

@if (Trasy == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Název</th>
				<th>Zastávky</th>
				<th>Úpravy</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var Trasa in Trasy)
			{
				<tr>
					<td>@Trasa.Jmeno</td>
					<td>@Helpers.ListToString(Trasa.Zastavky)</td>
					<td>
						<button type="button" class="btn btn-outline-primary btn-sm" @onclick="(() => Edit(Trasa.Id))">
							<span class="oi oi-pencil" aria-hidden="true"></span>
						</button>
						<button type="button" class="btn btn-outline-primary btn-sm" @onclick="(() => Delete(Trasa.Id))">
							<span class="oi oi-trash" aria-hidden="true"></span>
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
	<button type="button" class="btn btn-outline-primary btn-sm" @onclick="(() => Add())">
		<span class="oi oi-plus" aria-hidden="true"></span>
	</button>
}

@code {
    private List<Trasa> Trasy;

    protected override async Task OnInitializedAsync()
    {
        Trasy = await Http.GetFromJsonAsync<List<Trasa>>("/api/trasa/list");
    }


    private async void Delete(int id)
    {
        var result = await Http.PostAsJsonAsync<int>($"/api/trasa/remove/{id}", id);
        Navigation.NavigateTo("/trasy", forceLoad: true);
    }

    protected void Edit(int id)
    {
        Navigation.NavigateTo("trasy/edit/" + id);
    }

    protected void Add()
    {
        Navigation.NavigateTo("trasy/edit/" + -1);

    }
}

