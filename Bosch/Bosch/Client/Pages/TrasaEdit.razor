@page "/trasy/edit/{id:int}"
@using Bosch.Shared
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Upravit trasu</h3>

@if (Trasa != null && Mezisklady != null)
{
    <h4>Trasa</h4>
    <EditForm Model="@Trasa" OnValidSubmit="@HandleUloziTrasu">
        <DataAnnotationsValidator />
        <ValidationSummary />
         <div class="form-group">
                <label for="nazev">Název:</label>
                <InputText id="name" @bind-Value="Trasa.Jmeno" />
            </div>
        <button type="submit" class="btn btn-primary">Uložit trasu</button>
    </EditForm>


    <h4>Stanoviště</h4>
    <EditForm Model="@Zastavka" OnValidSubmit="@HandlePridatZastavku">
        <DataAnnotationsValidator />
        <ValidationSummary />
            <div class="form-group">
                <label for="material">Stanoviště</label>
                <select id="material" @bind="Zastavka.Mezisklad.Id" class="form-control">
                    @foreach (var mezisklad in Mezisklady)
                    {
                        <option value="@mezisklad.Id">@mezisklad.Jmeno</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="cas">Čas:</label>
                <input @bind="Zastavka.Cas" type="time" id="cas" name="appt">
            </div>
        <button type="submit" class="btn btn-primary">Přidat stanoviště do trasy</button>
    </EditForm>

    <table class="table">
		<thead>
			<tr>
				<th>Mezisklad</th>
				<th>Čas</th>
			</tr>
		</thead>
		<tbody>
        @foreach(var zastavka in Trasa.Zastavky.OrderBy(z => z.Cas))
        {
                <tr>
					<td>@zastavka.Mezisklad.Jmeno</td>
					<td>@zastavka.Cas.ToString("HH:mm:ss")</td>
				</tr>
        }
    </tbody>
	</table>

}

@code 
{
    Zastavka Zastavka { get; set; } = new Zastavka();

    private Mezisklad[] Mezisklady;

    public Trasa Trasa;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Trasa = await Http.GetFromJsonAsync<Trasa>("/api/trasa/edit/" + Id);
        Mezisklady = await Http.GetFromJsonAsync<Mezisklad[]>("/api/mezisklad/list");
    }

    private void HandlePridatZastavku()
    {
        Trasa.Zastavky.Add(new Zastavka()
        {
            Mezisklad = Mezisklady.First(m => m.Id == Zastavka.Mezisklad.Id),
            Cas = Zastavka.Cas

        });
    }

    private async void HandleUloziTrasu()
    {
        Trasa.Id = Id;
        await Http.PostAsJsonAsync<Trasa>("/api/trasa/save", Trasa);
        Navigation.NavigateTo("/trasy");
    }

	
}
